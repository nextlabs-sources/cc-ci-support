node {
    def jdkPath = (isUnix() ? '/opt/' : 'C:/') + 'jdk-11.0.9+11'
    properties([
            parameters([
                    gitParameter(
                            branch: '',
                            branchFilter: 'origin/(develop|feature/.*|release/.*|hotfix/.*)',
                            defaultValue: 'develop',
                            description: 'Git branch to build',
                            listSize: '10',
                            name: 'BRANCH',
                            quickFilterEnabled: true,
                            selectedValue: 'DEFAULT',
                            sortMode: 'ASCENDING',
                            tagFilter: '*',
                            type: 'PT_BRANCH',
                            useRepository: '.*destiny-plugins.git'
                    ),
            ])
    ])
    stage('Clone Repository') {
        dir('cc-jwt-secrets-manager') {
            git branch: "${params.BRANCH}", credentialsId: 'bitbucket-build-op', url: 'git@bitbucket.org:nxtlbs-devops/destiny-plugins.git'
        }
    }
    stage('Build') {
        dir('cc-jwt-secrets-manager/JWTSecret') {
            sh "chmod +x ./gradlew && ./gradlew -x test -Dorg.gradle.java.home=${jdkPath} :pdp-jwtsecrets-manager-common:clean :pdp-jwtsecrets-manager-common:build"
            sh "chmod +x ./gradlew && ./gradlew -x test -Dorg.gradle.java.home=${jdkPath} :pdp-jwtsecrets-manager-client:clean :pdp-jwtsecrets-manager-client:build"
            sh "chmod +x ./gradlew && ./gradlew -x test -Dorg.gradle.java.home=${jdkPath} :pdp-jwtsecrets-manager-server:clean :pdp-jwtsecrets-manager-server:build"
        }
    }
    stage('SonarQube') {
        dir('cc-jwt-secrets-manager/JWTSecret') {
            try {
                sh "chmod +x ./gradlew && ./gradlew -x test -Dorg.gradle.java.home=${jdkPath} :pdp-jwtsecrets-manager-common:sonarqube"
                sh "chmod +x ./gradlew && ./gradlew -x test -Dorg.gradle.java.home=${jdkPath} :pdp-jwtsecrets-manager-client:sonarqube"
                sh "chmod +x ./gradlew && ./gradlew -x test -Dorg.gradle.java.home=${jdkPath} :pdp-jwtsecrets-manager-server:sonarqube"
            } catch (Exception e) {
                echo "Error in running SonarQube"
            }
        }
    }
    stage('Publish') {
        dir('cc-jwt-secrets-manager/JWTSecret') {
            sh "chmod +x ./gradlew && ./gradlew -x test -Dorg.gradle.java.home=${jdkPath} :pdp-jwtsecrets-manager-client:artifactoryPublish"
            sh "chmod +x ./gradlew && ./gradlew -x test -Dorg.gradle.java.home=${jdkPath} :pdp-jwtsecrets-manager-server:artifactoryPublish"
        }
    }
}
